buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/public/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = "1.7.10-1.4.3"
group = "net.malisis" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "malisisdoors"
libsDirName = "../releases"

sourceSets
{
	main
	{
		java { srcDirs = ["$projectDir/source"] }
		resources { srcDirs = ["$projectDir/resources"] }
	}
}

dependencies
{
	compile 'org.projectlombok:lombok:1.14.8'
	compile 'net.malisis:malisiscore:1.7.10-0.10.5:dev'	
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    classifier = 'dev'
}


artifacts {
    archives deobfJar
}

minecraft {
	version = "1.7.10-10.13.2.1232"
	if(file("../../run").exists()) 	{
		runDir = "../../run/assets"
	}
	else {
		runDir = "assets"
	}
	
	replace '${version}', project.version
    replaceIn "MalisisDoors.java"
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

uploadArchives() 
{
	//dependsOn reobf
	
	if (project.mavenUrl != null) 
	{
		repositories 
		{
			logger.info('Publishing to files server')
			mavenDeployer 
			{
				repository(url: project.mavenUrl) 
				{
					authentication(userName: project.mavenUser, password: project.mavenPassword)
				}
				
				addFilter('deobf') 
				{
					artifact, file -> artifact.attributes['classifier'] == 'dev'
				}				
				pom('deobf').version = project.version
				
				addFilter('universal') 
				{
					artifact, file -> artifact.attributes['classifier'] == null
				}
				pom('universal').version = project.version
				
				pom 
				{
					groupId = project.group
					version = project.version
					artifactId = project.archivesBaseName
					project 
					{
						name project.archivesBaseName
						packaging 'jar'
						description 'Animations for doors, new ones, mixed blocks and vanishing blocks.'
						url 'https://github.com/Ordinastie/MalisisDoors'
						scm 
						{
							url 'scm:git:git@github.com:Ordinastie/MalisisDoors.git'
							connection 'scm:git:git@github.com:Ordinastie/MalisisDoors.git'
							developerConnection 'scm:git:git@github.com:Ordinastie/MalisisDoors.git'
						}
						issueManagement 
						{
							system 'github'
							url 'https://github.com/Ordinastie/MalisisDoors/issues'
						}
						licenses 
						{
							license 
							{
								name 'MIT'
								url 'http://opensource.org/licenses/MIT'
								distribution 'repo'
							}
						}
						developers 
						{
							developer 
							{
								id 'Ordinastie'
								name 'Ordinastie'
								roles { role 'developer' }
							}
						}
					}
				}
			}
		}
	}
	else 
	{
		logger.log(LogLevel.ERROR, 'No upload url (project.mavenUrl) defined!');
	}
}